// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_my_app/model/comic_model_entity.dart';
import 'package:flutter_my_app/generated/json/comic_model_entity_helper.dart';
import 'package:flutter_my_app/model/dmzj_entity.dart';
import 'package:flutter_my_app/generated/json/dmzj_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case ComicModelEntity:
			return comicModelEntityFromJson(data as ComicModelEntity, json) as T;			case ComicModelType:
			return comicModelTypeFromJson(data as ComicModelType, json) as T;			case ComicModelStatu:
			return comicModelStatuFromJson(data as ComicModelStatu, json) as T;			case ComicModelAuthor:
			return comicModelAuthorFromJson(data as ComicModelAuthor, json) as T;			case ComicModelChapter:
			return comicModelChapterFromJson(data as ComicModelChapter, json) as T;			case ComicModelChaptersData:
			return comicModelChaptersDataFromJson(data as ComicModelChaptersData, json) as T;			case ComicModelComment:
			return comicModelCommentFromJson(data as ComicModelComment, json) as T;			case ComicModelCommantLatestCommant:
			return comicModelCommantLatestCommantFromJson(data as ComicModelCommantLatestCommant, json) as T;			case ComicModelDhUrlLink:
			return comicModelDhUrlLinkFromJson(data as ComicModelDhUrlLink, json) as T;			case DmzjEntity:
			return dmzjEntityFromJson(data as DmzjEntity, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case ComicModelEntity:
			return comicModelEntityToJson(data as ComicModelEntity);			case ComicModelType:
			return comicModelTypeToJson(data as ComicModelType);			case ComicModelStatu:
			return comicModelStatuToJson(data as ComicModelStatu);			case ComicModelAuthor:
			return comicModelAuthorToJson(data as ComicModelAuthor);			case ComicModelChapter:
			return comicModelChapterToJson(data as ComicModelChapter);			case ComicModelChaptersData:
			return comicModelChaptersDataToJson(data as ComicModelChaptersData);			case ComicModelComment:
			return comicModelCommentToJson(data as ComicModelComment);			case ComicModelCommantLatestCommant:
			return comicModelCommantLatestCommantToJson(data as ComicModelCommantLatestCommant);			case ComicModelDhUrlLink:
			return comicModelDhUrlLinkToJson(data as ComicModelDhUrlLink);			case DmzjEntity:
			return dmzjEntityToJson(data as DmzjEntity);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'ComicModelEntity':
			return ComicModelEntity().fromJson(json);			case 'ComicModelType':
			return ComicModelType().fromJson(json);			case 'ComicModelStatu':
			return ComicModelStatu().fromJson(json);			case 'ComicModelAuthor':
			return ComicModelAuthor().fromJson(json);			case 'ComicModelChapter':
			return ComicModelChapter().fromJson(json);			case 'ComicModelChaptersData':
			return ComicModelChaptersData().fromJson(json);			case 'ComicModelComment':
			return ComicModelComment().fromJson(json);			case 'ComicModelCommantLatestCommant':
			return ComicModelCommantLatestCommant().fromJson(json);			case 'ComicModelDhUrlLink':
			return ComicModelDhUrlLink().fromJson(json);			case 'DmzjEntity':
			return DmzjEntity().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'ComicModelEntity':
			return List<ComicModelEntity>();			case 'ComicModelType':
			return List<ComicModelType>();			case 'ComicModelStatu':
			return List<ComicModelStatu>();			case 'ComicModelAuthor':
			return List<ComicModelAuthor>();			case 'ComicModelChapter':
			return List<ComicModelChapter>();			case 'ComicModelChaptersData':
			return List<ComicModelChaptersData>();			case 'ComicModelComment':
			return List<ComicModelComment>();			case 'ComicModelCommantLatestCommant':
			return List<ComicModelCommantLatestCommant>();			case 'ComicModelDhUrlLink':
			return List<ComicModelDhUrlLink>();			case 'DmzjEntity':
			return List<DmzjEntity>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}